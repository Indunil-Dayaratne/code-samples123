parameters:
- name: working_dir
  type: string
- name: validate_file_name
  type: string
  default: validate.tests.ps1
- name: verify_file_name
  type: string
  default: verify.tests.ps1
- name: moduleRepos
  type: object
  default: []
- name: deployDev
  type: boolean
- name: deployTst
  type: boolean
- name: deployUAT
  type: boolean
- name: deployStg
  type: boolean
- name: deployPrd
  type: boolean

stages:
  - stage: verify
    displayName: Verify Infrastructure Configuration
    pool:
      vmImage: windows-latest
    condition: eq(variables['Build.Reason'], 'Schedule')
    jobs:
      - job: verify_nonprod
        displayName: Verify Non-Production Infrastructure Configuration
        variables:
          - group: Terraform Non-Prod Deploy
          - group: Sendgrid - Non Prod
        steps:
          - checkout: self

          - ${{ each repo in parameters.moduleRepos }}:
            - checkout: ${{ repo }}

          - template: ../terraform/tf-install.yml
            parameters:
              version: $(terraform_version)

          - template: ../terraform/validate.yml
            parameters:
              env: dev
              working_dir: ${{parameters.working_dir}}
              validate_file_name: ${{parameters.verify_file_name}}

          - template: ../terraform/validate.yml
            parameters:
              env: tst
              working_dir: ${{parameters.working_dir}}
              validate_file_name: ${{parameters.verify_file_name}}

          - template: ../terraform/validate.yml
            parameters:
              env: uat
              working_dir: ${{parameters.working_dir}}
              validate_file_name: ${{parameters.verify_file_name}}

          - template: ../terraform/validate.yml
            parameters:
              env: stg
              working_dir: ${{parameters.working_dir}}
              validate_file_name: ${{parameters.verify_file_name}}

      - job: verify_prod
        displayName: Verify Production Infrastructure Configuration
        variables:
          - group: Terraform Prod Deploy
        steps:
          - checkout: self

          - ${{ each repo in parameters.moduleRepos }}:
            - checkout: ${{ repo }}

          - template: ../terraform/tf-install.yml
            parameters:
              version: $(terraform_version)

          - template: ../terraform/validate.yml
            parameters:
              env: prd
              working_dir: ${{parameters.working_dir}}
              validate_file_name: ${{parameters.verify_file_name}}

  - stage: build
    displayName: Build
    pool:
      vmImage: windows-latest
    condition: eq(variables['Build.Reason'], 'PullRequest')
    jobs:
    - job: validatetf_nonprod
      displayName: Validate TF Non Prod
      variables:
        - group: Terraform Non-Prod Deploy
        - group: Sendgrid - Non Prod
      steps:
        - checkout: self

        - ${{ each repo in parameters.moduleRepos }}:
          - checkout: ${{ repo }}

        - template: ../terraform/tf-install.yml
          parameters:
            version: $(terraform_version)

        - template: ../terraform/validate.yml
          parameters:
            env: dev
            working_dir: ${{parameters.working_dir}}
            validate_file_name: ${{parameters.validate_file_name}}

        - template: ../terraform/validate.yml
          parameters:
            env: tst
            working_dir: ${{parameters.working_dir}}
            validate_file_name: ${{parameters.validate_file_name}}

        - template: ../terraform/validate.yml
          parameters:
            env: uat
            working_dir: ${{parameters.working_dir}}
            validate_file_name: ${{parameters.validate_file_name}}

        - template: ../terraform/validate.yml
          parameters:
            env: stg
            working_dir: ${{parameters.working_dir}}
            validate_file_name: ${{parameters.validate_file_name}}

    # - job: validatetf_prod
    #   displayName: Validate TF Prod
    #   variables:
    #     - group: Terraform Prod Deploy
    #   steps:
    #     - checkout: self

    #     - ${{ each repo in parameters.moduleRepos }}:
    #       - checkout: ${{ repo }}

    #     - template: tf-install.yml
    #       parameters:
    #         version: $(terraform_version)

    #     - template: validate.yml
    #       parameters:
    #         env: prd
    #         working_dir: ${{parameters.working_dir}}
    #         validate_file_name: ${{parameters.validate_file_name}}

  - stage: dev
    dependsOn: build
    displayName: Deploy Dev
    condition: and(not(failed('build')), not(eq(variables['Build.Reason'], 'Schedule')), or(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.SourceBranchName'], 'develop')), eq(${{parameters.deployDev}},true))
    variables:
    - group: Terraform Non-Prod Deploy
    - group: Sendgrid - Non Prod
    
    jobs:
    - template: tf-deploy.yml
      parameters:
        env: dev
        moduleRepos: ${{parameters.moduleRepos}}
        working_dir: ${{parameters.working_dir}}
        backend_config_file_name: $(backend_config_file_name_nonprod)

  - stage: tst
    displayName: Deploy TST
    condition: and(not(failed('tst')), eq(variables['Build.Reason'], 'Manual'), eq(${{parameters.deployTst}},true))
    dependsOn: dev
    variables:
    - group: Terraform Non-Prod Deploy
    - group: Sendgrid - Non Prod
    jobs:
    - template: tf-deploy.yml
      parameters:
        env: tst
        moduleRepos: ${{parameters.moduleRepos}}
        working_dir: ${{parameters.working_dir}}
        backend_config_file_name: $(backend_config_file_name_nonprod)

  - stage: uat
    displayName: Deploy UAT
    condition: and(not(failed('tst')), eq(variables['Build.Reason'], 'Manual'),eq(${{parameters.deployUAT}},true))
    dependsOn: tst
    variables:
    - group: Terraform Non-Prod Deploy
    - group: Sendgrid - Non Prod
    jobs:
    - template: tf-deploy.yml
      parameters:
        env: uat
        moduleRepos: ${{parameters.moduleRepos}}
        working_dir: ${{parameters.working_dir}}
        backend_config_file_name: $(backend_config_file_name_nonprod)

  - stage: stg
    displayName: Deploy STG
    condition: and(not(failed('uat')), eq(variables['Build.Reason'], 'Manual'),eq(${{parameters.deployStg}},true))
    dependsOn: uat
    variables:
    - group: Terraform Non-Prod Deploy
    - group: Sendgrid - Non Prod
    jobs:
    - template: tf-deploy.yml
      parameters:
        env: stg
        moduleRepos: ${{parameters.moduleRepos}}
        working_dir: ${{parameters.working_dir}}
        backend_config_file_name: $(backend_config_file_name_nonprod)

  - stage: prd
    displayName: Deploy Prod
    condition: and(not(failed('stg')), and(eq(variables['Build.Reason'], 'Manual'), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),eq(variables['Build.SourceBranch'], 'refs/heads/master'))),eq(${{parameters.deployPrd}},true))
    dependsOn: stg
    variables:
    - group: Terraform Prod Deploy
    - group: Sendgrid - Prod
    jobs:
    - template: tf-deploy.yml
      parameters:
        env: prd
        moduleRepos: ${{parameters.moduleRepos}}
        working_dir: ${{parameters.working_dir}}
        backend_config_file_name: $(backend_config_file_name_prod)
